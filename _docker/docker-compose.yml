version: "3.6"
services:

    redis:
      image: redis:alpine
      container_name: ${PROJECT_NAME}-redis

    postgres:
      image: postgres:10
      container_name: ${PROJECT_NAME}-postgres
      volumes:
         - "./postgres:/var/lib/postgresql/data"
         - ./docker/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      environment:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASS}
        - POSTGRES_DB=${POSTGRES_DB}
      ports:
       - "${POSTGRES_PORT}:5432"
      networks:
        testing_net:
            ipv4_address: 172.28.1.2

    webserver:
      build: 
        context: nginx
      # image: nginx:alpine
      container_name: ${PROJECT_NAME}-webserver
      working_dir: /application
      links:
        - postgres
      depends_on:
        - php-fpm
        - postgres
        - redis
      volumes:
          - ../:/application/
          - ./nginx/sites:/etc/nginx/conf.d
      ports:
       - "80:80"
      networks:
            testing_net:
                ipv4_address: 172.28.1.3

    php-fpm:
      build: php-fpm
      container_name: ${PROJECT_NAME}-php-fpm
      working_dir: /application
      volumes:
        - ../:/application/
        - ./php-fpm/php-ini-overrides.ini:/etc/php/7.3/fpm/conf.d/99-overrides.ini
      networks:
          testing_net:
              ipv4_address: 172.28.1.4
networks:
    testing_net:
        ipam:
            driver: default
            config:
                - subnet: 172.28.0.0/16